{% metadata_file .yamato/metadata.metafile %}
---
{% for test in all_tests %}
{% for platform in all_platforms %}
{% for editor in test.editors %}
test_{{ test.name }}_{{ platform.name }}_{{ editor }}:
  name : Test package {{ test.name }} on {{ platform.name }} with {{ editor }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  {% if platform.name == "centos" or test.variables %}
  variables:
    UPMCI_ENABLE_APV_CLEAN_CONSOLE_TEST: 1
    {% if platform.name == "centos" %}
    DISPLAY: ":0"
    {% endif %}
    {% for variable in test.variables %}
    {{ variable }}
    {% endfor %}
  {% endif %}
  commands:
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package test -u {{ editor }} {{ test.args }} --package-path com.unity.cinemachine
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
  dependencies:
    - .yamato/package-pack.yml#pack
{% endfor %}
{% endfor %}
{% endfor %}

{% for platform in all_platforms%}
clean_console_test_in_2022.2_on_{{ platform.name }}:
  name: clean_console_test_in_2022.2_on_{{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor }}
  variables:
    UPMCI_ENABLE_APV_CLEAN_CONSOLE_TEST: 1
  commands:
    - python -c "import json, sys; m = json.load(open(sys.argv[1])); m['dependencies']['com.unity.render-pipelines.high-definition'] = '13.1.8'; json.dump(m, open(sys.argv[1], 'w'))" com.unity.cinemachine/package.json
    - npm install upm-ci-utils@stable -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path com.unity.cinemachine
    - upm-ci package test -u 2022.2 --package-path com.unity.cinemachine
{% endfor %}
